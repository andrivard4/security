#We can assume for now that the user is logged in
public_key = ""
private_key = ""
JSON_data = ""
input_name = ""
input_email = ""

#Get contact name and email
def getInput():
    print("getting input...")
#Validate email is an email address
def validateInput():
    print("validating input...")
#This one will be interesting...
#When the user creates the account, we create a public and private key with it
#The private key is then encrypted and stored in ~/.securedrop/private.pem
#That file is encrypted with a key generated by the user's password and salt
#We can assume the key is decrypted already from MS2 and stored as a global variable
#Use that private key to decrypt the contact data (basically undo what was done in encryptData function in registration.py)
#once that is done we can parse the data as a JSON file (use python's json library)
#The first entry will be the user with their name, email, and public key... we need the public key for encrypting this file)
def decryptContacts():
    print("decrupting")

#Add a contact to the JSON data
def addContactsToFile():
    print("updating file...")

#Encrypt the contact info with the public key retrieved in the decrypt section then write it to the contact file
def encryptFile():
    print("encrypting file...")
